# frozen_string_literal: true

require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '16.0'

install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'glint' do
  use_expo_modules!

  # Enable modular headers only for gRPC pods to fix missing modulemap
  pod 'gRPC-Core', '1.69.0', :modular_headers => true
  pod 'gRPC-C++', '1.69.0', :modular_headers => true

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
  else
    config_command = [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_react_native!(
    path: config[:reactNativePath],
    hermes_enabled: podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    app_path: "#{Pod::Config.instance.installation_root}/..",
    privacy_file_aggregation_enabled: podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false'
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      mac_catalyst_enabled: false,
      ccache_enabled: podfile_properties['apple.ccacheEnabled'] == 'true'
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'

        if ["expo-dev-menu", "Main", "ReactNativeCompatibles", "SafeAreaView", "Vendored"].include?(target.name)
          config.build_settings['DEFINES_MODULE'] = 'NO'
        end

        if target.name == 'FirebaseAuth'
          config.build_settings['DEFINES_MODULE'] = 'YES'
          config.build_settings['SWIFT_VERSION'] = '5.0'
        end

        if ['FirebaseCoreInternal', 'FirebaseFirestore'].include?(target.name)
          config.build_settings['DEFINES_MODULE'] = 'YES'
          config.build_settings['SWIFT_VERSION'] = '5.0'
        end
      end
    end
  end
end

